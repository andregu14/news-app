// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> renders correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#fff",
      },
      [
        undefined,
        {
          "width": "100%",
        },
      ],
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "#fff",
        },
        {
          "flexDirection": "row",
          "gap": 60,
          "justifyContent": "space-around",
          "width": "100%",
        },
      ]
    }
    testID="header"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="account-button"
    >
      <Text />
    </View>
    <Text />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="menu-button"
    >
      <Text />
    </View>
  </View>
  <View
    style={
      [
        {
          "backgroundColor": "#eee",
        },
        {
          "height": 1,
          "marginTop": 10,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`<Header /> renders correctly with icons 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#fff",
      },
      [
        undefined,
        {
          "width": "100%",
        },
      ],
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "#fff",
        },
        {
          "flexDirection": "row",
          "gap": 60,
          "justifyContent": "space-around",
          "width": "100%",
        },
      ]
    }
    testID="header"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="account-button"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "#3F3F3F",
              "fontSize": 28,
            },
            undefined,
            {
              "fontFamily": "material-community",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
        testID="icon-account"
      >
        󰀄
      </Text>
    </View>
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": "#3F3F3F",
            "fontSize": 28,
          },
          undefined,
          {
            "fontFamily": "material-community",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
      testID="icon-diamond-stone"
    >
      󰇈
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="menu-button"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "#3F3F3F",
              "fontSize": 28,
            },
            undefined,
            {
              "fontFamily": "material-community",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
        testID="icon-menu"
      >
        󰜬
      </Text>
    </View>
  </View>
  <View
    style={
      [
        {
          "backgroundColor": "#eee",
        },
        {
          "height": 1,
          "marginTop": 10,
          "width": "100%",
        },
      ]
    }
  />
</View>
`;
